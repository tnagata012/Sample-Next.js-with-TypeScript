import { ParsedUrlQuery } from 'querystring'
import { GetStaticPaths, GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'

interface PostParams extends ParsedUrlQuery {
  idParam: string
}

type PostProps = {
  idProp: string
}

const Post: NextPage<PostProps> = (props) => {
  const { idProp: id } = props
  const router = useRouter()

  if (router.isFallback) {
    return <div>Loading...</div>
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main>
        <p>This page was generated by SSG at build time.</p>
        <p>{`Related to /posts/${id}`}</p>
      </main>
    </div>
  )
}

export const getStaticPaths: GetStaticPaths<PostParams> = async () => {
  const paths = [
    {
      params: {
        idParam: '1',
      },
    },
    {
      params: {
        idParam: '2',
      },
    },
    {
      params: {
        idParam: '3',
      },
    },
  ]

  return { paths, fallback: false }
}

export const getStaticProps: GetStaticProps<PostProps, PostParams> = async (context) => {
  return {
    props: {
      idProp: context.params?.idParam ?? '',
    },
  }
}

export default Post
